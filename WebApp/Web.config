<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- Services sections -->
    <section name="TempFileManagerProvider" type="SEOToolSet.TempFileManagerProvider.TempFileManagerProviderConfiguration, SEOToolSet.TempFileManagerProvider" />
    <section name="AccountProvider" type="SEOToolSet.Providers.AccountProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="ProjectProvider" type="SEOToolSet.Providers.ProjectProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="SEOMembershipProvider" type="SEOToolSet.Providers.SEOMembershipProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="SEORoleProvider" type="SEOToolSet.Providers.SEORoleProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="RankingMonitorProvider" type="SEOToolSet.Providers.RankingMonitorProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="ProjectUserProfileProvider" type="SEOToolSet.Providers.ProjectUserProfileProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="SubscriptionProvider" type="SEOToolSet.Providers.SubscriptionProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="PromoCodeProvider" type="SEOToolSet.Providers.PromoCodeProviderConfiguration, SEOToolSet.Providers"></section>
    <section name="RecurringBillingProvider" type="SEOToolSet.Providers.RecurringBillingProviderConfiguration, SEOToolSet.Providers"></section>

    <!-- NHibernate DataStore -->
    <section name="eucalypto" type="NHibernateDataStore.Configuration.EucalyptoSection, NHibernateDataStore" />




    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" allowDefinition="MachineToApplication" />
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" allowDefinition="Everywhere" />
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
  </configSections>

  <appSettings>
    <add key="JavascriptResourceFile" value="JavascriptMessages" />
    <add key="ReportServicesURL" value="http://bclaydev.bruceclay.com/reports/Handler/RetrieveReport.ashx" />
    <add key="VersionHandlerURL" value="http://bclaydev.bruceclay.com/reports/Handler/GetVersion.ashx" />
    <add key="SinglePageAnalyzerInitUrl" value="http://bclaydev.bruceclay.com/services/kda.py/GetPage" />

    <add key="CreateUserHtmlTemplateEmail" value="~/App_Data/CreateUserHtmlTemplate.txt" />
    <add key="CreateUserPlainTemplateEmail" value="~/App_Data/CreateUserPlainTemplate.xml" />
    <!--  <add key="ReportServicesURL" value="http://192.168.1.21/SEOToolSet.ReportServices/Handler/GetReport.ashx" />
      <add key="VersionHandlerURL" value="http://192.168.1.21/SEOToolSet.ReportServices/Handler/GetVersion.ashx"/>       -->
    <!--
        <add key="ReportServicesURL" value="http://steve.smartz.com/SEOToolSet.ReportServices/Handler/GetReport.ashx"></add>
		<add key="VersionHandlerURL" value="http://steve.smartz.com/SEOToolSet.ReportServices/Handler/GetVersion.ashx"/>
		<add key="ReportServicesURL" value="http://172.16.40.40/SEOToolSet.ReportServices/Handler/GetReport.ashx"></add>
		<add key="VersionHandlerURL" value="http://172.16.40.40/SEOToolSet.ReportServices/Handler/GetVersion.ashx"/>
	    -->

  </appSettings>

  <connectionStrings>
    <clear />
    <!--<add name="DefaultDB"
		 connectionString="
			DriverClass=NHibernate.Driver.MySqlDataDriver;
			Dialect=NHibernate.Dialect.MySQLDialect;
			Database=brucecl_seodb;
			Data Source=bclaydev.bruceclay.com;
			User Id=brucecl_SEOUser;
			Password=rocaroca;
			port=3306;
			Connect Timeout=30;
			NHibernateInterceptor=NHibernateDataStore.Interceptor.EucalyptoInterceptor, NHibernateDataStore;
			proxyfactory.factory_class=NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle;
			CreatedOn=CreatedDate;
			CreatedBy=CreatedBy;
			UpdatedOn=UpdatedDate;
			UpdatedBy=UpdatedBy;
			show_sql=false;
			Allow User Variables=true;
			CharSet=utf8;" />-->
    <add name ="MySqlConn" connectionString="server=127.0.0.1;user id=root; password=123456; database=brucecl_seodb; pooling=false;charset=utf8"/>
    <!--<add name ="mySqlConn" connectionString="server=bclaydev.bruceclay.com;user id=brucecl_SEOUser; password=rocaroca; database=brucecl_seodb; pooling=false;charset=utf8"/>-->
    <add name="DefaultDB"
		 connectionString="
			DriverClass=NHibernate.Driver.MySqlDataDriver;
			Dialect=NHibernate.Dialect.MySQLDialect;
			Database=brucecl_seodb;
			Data Source=127.0.0.1;
			User Id=root;
			Password=123456;
			port=3306;
			Connect Timeout=30;
			NHibernateInterceptor=NHibernateDataStore.Interceptor.EucalyptoInterceptor, NHibernateDataStore;
			proxyfactory.factory_class=NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle;
			CreatedOn=CreatedDate;
			CreatedBy=CreatedBy;
			UpdatedOn=UpdatedDate;
			UpdatedBy=UpdatedBy;
			show_sql=false;
			Allow User Variables=true;
			CharSet=utf8;" />

  </connectionStrings>

  <TempFileManagerProvider defaultProvider="TempFileManagerFSProvider">
    <providers>
      <clear />
      <add name="TempFileManagerFSProvider" type="SEOToolSet.TempFileManagerFSProvider.FileSystemProvider, SEOToolSet.TempFileManagerFSProvider" TempFolderLocation="~/Upload/" TempFileExtension=".txt" MaxAgeOfFilesInMinutes="10" AutoStartPurge="true" />
    </providers>
  </TempFileManagerProvider>

  <SubscriptionProvider defaultProvider="NHibernateSubscriptionProvider">
    <providers>
      <clear />
      <add name="NHibernateSubscriptionProvider" type="SEOToolSet.Providers.NHibernate.NHibernateSubscriptionProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" />
    </providers>
  </SubscriptionProvider>

  <AccountProvider defaultProvider="NHibernateAccountProvider">
    <providers>
      <clear />
      <add name="NHibernateAccountProvider" type="SEOToolSet.Providers.NHibernate.NHibernateAccountProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" topLevelAccountName="Bruce Clay, Inc." />
    </providers>
  </AccountProvider>

  <ProjectProvider defaultProvider="MySqlProjectProvider">
    <providers>
      <clear />
      <add name="MySqlProjectProvider" type="SEOToolSet.Providers.MySql.MySqlProjectProvider, SEOToolSet.Providers.MySql" connectionStringName="MySqlConn" />
      <add name="NHibernateProjectProvider" type="SEOToolSet.Providers.NHibernate.NHibernateProjectProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" />
    </providers>
  </ProjectProvider>

  <SEOMembershipProvider defaultProvider="NHibernateSEOMembershipProvider">
    <providers>
      <clear />
      <add name="NHibernateSEOMembershipProvider" type="SEOToolSet.Providers.NHibernate.NHibernateSEOMembershipProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" requiresUniqueEmail="true" />
    </providers>
  </SEOMembershipProvider>

  <SEORoleProvider defaultProvider="NHibernateSEORoleProvider">
    <providers>
      <clear />
      <add name="NHibernateSEORoleProvider" type="SEOToolSet.Providers.NHibernate.NHibernateSEORoleProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" />
    </providers>
  </SEORoleProvider>

  <PromoCodeProvider defaultProvider="NHibernatePromoCodeProvider">
    <providers>
      <clear />
      <add name="NHibernatePromoCodeProvider" type="SEOToolSet.Providers.NHibernate.NHibernatePromoCodeProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" />
    </providers>
  </PromoCodeProvider>

  <RankingMonitorProvider defaultProvider="NHibernateRankingMonitorProvider">
    <providers>
      <clear />
      <add name="NHibernateRankingMonitorProvider" type="SEOToolSet.Providers.NHibernate.NHibernateRankingMonitorProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" />
    </providers>
  </RankingMonitorProvider>

  <ProjectUserProfileProvider defaultProvider="NHibernateProjectUserProfileProvider">
    <providers>
      <clear />
      <add name="NHibernateProjectUserProfileProvider" type="SEOToolSet.Providers.NHibernate.NHibernateProjectUserProfileProvider, SEOToolSet.Providers.NHibernate" applicationName="Default" />
    </providers>
  </ProjectUserProfileProvider>
  <RecurringBillingProvider defaultProvider="AuthorizeNetRecurringBillingProvider">
    <providers>
      <clear />
      <add name="AuthorizeNetRecurringBillingProvider" type="SEOToolSet.Providers.AuthorizeNet.AuthorizeNetRecurringBillingProvider, SEOToolSet.Providers.AuthorizeNet" filePath="Default" transactionKey="6rWUm9Z755sz44aR" userLoginName="7h47qLB222F9" />
    </providers>
  </RecurringBillingProvider>
  <log4net>
    <!-- Complete log for debug (configured to generate a new file at each 1000 kb, with a maximum of 10 files) -->
    <appender name="DebugInfoLog" type="log4net.Appender.RollingFileAppender">
      <file value="App_Data\Debug_Info_log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1000KB" />
      <staticLogFileName value="true" />
      <countDirection value="1" />
      <layout type="log4net.Layout.PatternLayout">
        <!--="[%date{yyMMdd HH:mm:ss} (%thread) %-5level %logger (%property{NDC})] %newline - %message%newline%newline" -->
        <param name="ConversionPattern" value="[%date{yyMMdd HH:mm:ss} (%thread) %-5level %logger ] %newline - %message%newline%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="DEBUG" />
        <levelMax value="DEBUG" />
      </filter>
    </appender>
    <appender name="WarnFatalLog" type="log4net.Appender.RollingFileAppender">
      <file value="App_Data\Warn_Fatal_log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1000KB" />
      <staticLogFileName value="true" />
      <countDirection value="1" />
      <layout type="log4net.Layout.PatternLayout">
        <!--="[%date{yyMMdd HH:mm:ss} (%thread) %-5level %logger (%property{NDC})] %newline - %message%newline%newline" -->
        <param name="ConversionPattern" value="[%date{yyMMdd HH:mm:ss} (%thread) %-5level %logger ] %newline - %message%newline%newline" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="WARN" />
        <levelMax value="FATAL" />
      </filter>
    </appender>
    <!-- Setup the root category, add the appenders and set the default level -->
    <root>
      <!-- ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF-->
      <level value="FATAL" id="LogLevel" />
      <appender-ref ref="DebugInfoLog" />
      <appender-ref ref="WarnFatalLog" />
    </root>
  </log4net>

  <eucalypto NHibernateHelperType="NHibernateDataStore.Common.DefaultConfigurationHelper, NHibernateDataStore">
    <mappings>
      <add assembly="SEOToolSet.Entities" />
      <add assembly="SEOToolSet.ViewEntities" excludeFromExportSchema="true" />
    </mappings>
  </eucalypto>

  <system.net>
    <mailSettings>
      <smtp from="support@bruceclay.com">
        <network host="localhost" port="25" defaultCredentials="true" />
      </smtp>
    </mailSettings>
  </system.net>

  <system.web>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" responseHeaderEncoding="utf-8" />
    <siteMap defaultProvider="XmlSiteMapProvider" enabled="true">
      <providers>
        <add name="XmlSiteMapProvider" description="Default SiteMap provider" type="System.Web.XmlSiteMapProvider" siteMapFile="Web.sitemap" />
      </providers>
    </siteMap>
    <authentication mode="Forms">
      <forms loginUrl="LoginPage.aspx" defaultUrl="ProjectDashboard.aspx" timeout="120" slidingExpiration="true">
      </forms>
    </authentication>
    <authorization>
      <allow users="?" />
    </authorization>
    <membership defaultProvider="NHibernateMembershipProvider">
      <providers>
        <clear />
        <!-- Membership provider configuration
                     Note: the passwordFormat and enablePasswordRetrieval properties are not supported.
                  -->
        <add name="NHibernateMembershipProvider"
             type="SEOToolSet.Providers.NHibernate.NHibernateMembershipProvider, SEOToolSet.Providers.NHibernate"
             connectionStringName="DefaultDB"
             applicationName="Default"
             minRequiredNonAlphanumericCharacters="0"
             minRequiredPasswordLength="4" requiresUniqueEmail="true" />
      </providers>
    </membership>
    <roleManager enabled="true" defaultProvider="NHibernateRoleProvider">
      <providers>
        <clear />
        <add name="NHibernateRoleProvider" connectionStringName="DefaultDB" type="SEOToolSet.Providers.NHibernate.NHibernateRoleProvider, SEOToolSet.Providers.NHibernate" />
      </providers>
    </roleManager>
    <profile defaultProvider="NHibernateProfileProvider">
      <providers>
        <clear />
        <add name="NHibernateProfileProvider" type="SEOToolSet.Providers.NHibernate.NHibernateProfileProvider, SEOToolSet.Providers.NHibernate" connectionStringName="DefaultDB" applicationName="Default" />
      </providers>
      <properties>
        <add name="ProjectUserProfileCollection" allowAnonymous="false" type="SEOToolSet.Providers.ProjectUserProfileCollection" />
        <add name="IdProjectSelected" allowAnonymous="false" type="System.Int32" />
        <add name="RankingMonitorConfiguration" allowAnonymous="false" type="System.String" />
        <add name="KeywordListRankingMonitorRunPreferences" allowAnonymous="false" type="System.String" />
      </properties>
    </profile>
    <anonymousIdentification enabled="true" />

    <customErrors mode="Off" />
    <!--
    <customErrors mode="On" defaultRedirect="~/Error.aspx" />
    -->

    <httpHandlers>
      <remove verb="*" path="*.asmx" />
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" validate="false" />
    </httpHandlers>
    <httpModules>
      <add name="NHibernateSessionModule" type="NHibernateDataStore.CustomModule.NHibernateSessionModule, NHibernateDataStore" />
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add type="SEOToolSet.WebApp.Modules.HttpModuleCheckValidUser, SEOToolSet.WebApp" name="CheckValidUser" />
    </httpModules>
    <pages theme="DefaultThemes">
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </controls>
    </pages>
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.Transactions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <identity impersonate="true" />
  </system.web>

  <system.web.extensions>
    <scripting>
      <webServices>
        <profileService enabled="true" readAccessProperties="KeywordListRankingMonitorRunPreferences" writeAccessProperties="KeywordListRankingMonitorRunPreferences" />
      </webServices>
    </scripting>
  </system.web.extensions>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules>
      <add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add type="SEOToolSet.WebApp.Modules.HttpModuleCheckValidUser, SEOToolSet.WebApp" name="CheckValidUser" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </handlers>
  </system.webServer>

</configuration>
